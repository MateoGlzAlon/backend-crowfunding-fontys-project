plugins {
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
    id "org.sonarqube" version "5.1.0.4882"
    id 'jacoco' // JaCoCo plugin added
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

sonar {
    properties {
        property "sonar.projectKey", "Individual-Crowfund"
        property "sonar.projectName", "Individual Crowfund"
        // You can add more SonarQube properties here if needed
    }
}

jacoco {
    toolVersion = "0.8.8" // Specify JaCoCo version, adjust if necessary
}

jacocoTestReport {
    dependsOn test // JaCoCo will depend on the 'test' task to run

    reports {
        xml.required = true // Ensure XML report is generated for SonarQube integration
        html.required = true // HTML report for local viewing
    }
}

group = 'fontys.sem3'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // Ensure the JaCoCo report is generated after tests
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled true // Enable XML report for SonarQube coverage integration
        html.enabled true // Enable HTML report for local inspection
    }
}
